global

	[...]

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDH-RSA-AES256-GCM-SHA384:ECDH-ECDSA-AES256-GCM-SHA384:AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDH-RSA-AES128-GCM-SHA256:ECDH-ECDSA-AES128-GCM-SHA256:AES128-GCM-SHA256
	ssl-default-bind-options no-sslv3

	[...]

	lua-load /usr/sbin/frontend.lua

	[...]

frontend

	[...]

        use_backend %[lua.get_certificate]
        default_backend rnc_server_https

	[...]

backend secure_http

	[...]

	reqadd X-Forwarded-Proto:\ https
	mode http
	option httplog	
	option forwardfor

	http-request set-header X-Haproxy-Current-Date %T
	http-request set-header X-SSL                  %[ssl_fc]
	http-request set-header X-SSL-Session_ID       %[ssl_fc_session_id,hex]
	http-request set-header X-SSL-Client-Verify    %[ssl_c_verify]
	http-request set-header X-SSL-Client-SHA1      %{+Q}[ssl_c_sha1,hex]
	http-request set-header X-SSL-Client-DN        %{+Q}[ssl_c_s_dn]
	http-request set-header X-SSL-Client-CN        %{+Q}[ssl_c_s_dn(cn)]
	http-request set-header X-SSL-Issuer           %{+Q}[ssl_c_i_dn]
	http-request set-header X-SSL-Client-NotBefore %{+Q}[ssl_c_notbefore]
	http-request set-header X-SSL-Client-NotAfter  %{+Q}[ssl_c_notafter]

	server local_http_server <server>:443 check ssl verify none

	[...]

